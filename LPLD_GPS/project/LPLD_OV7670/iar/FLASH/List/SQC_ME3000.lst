###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        23/Apr/2015  14:23:25
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  G:\test\LPLD_OSKinetis_V3_now02\lib\SQC\SQC_ME3000.c
#    Command line =  
#        G:\test\LPLD_OSKinetis_V3_now02\lib\SQC\SQC_ME3000.c -D LPLD_K60 -lCN
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\FLASH\List\
#        -lB
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\FLASH\List\ -o
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        E:\iar\arm\INC\c\DLib_Config_Normal.h -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\app\ -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\CPU\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\common\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\LPLD\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\LPLD\HW\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\FatFs\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\FatFs\option\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\USB\common\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\USB\driver\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\USB\descriptor\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\USB\class\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\Security\
#        -I
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\..\..\..\lib\SQC\
#        -Ol -I E:\iar\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\FLASH\List\SQC_ME3000.lst
#    Object file  =  
#        G:\test\LPLD_OSKinetis_V3_now02\project\LPLD_OV7670\iar\FLASH\Obj\SQC_ME3000.o
#
###############################################################################

G:\test\LPLD_OSKinetis_V3_now02\lib\SQC\SQC_ME3000.c
      1          /**
      2           * @file SQC_ME3000.c
      3           * @version 1.0[By finley]
      4           * @date 2015-04-16
      5           * @brief ZTE-ME3000 3G/GPRS 模块相关函数
      6           *
      7           * 更改建议:不建议修改
      8           *
      9           * 版权所有:宿迁学院物联网实验室
     10           * http://www.sqc.edu.cn
     11           *
     12           * @par
     13           * 本代码由宿迁学院[SQC]开发并维护，并向所有使用者开放源代码。
     14           * 开发者可以随意修使用或改源代码。但本段及以上注释应予以保留。
     15           * 不得更改或删除原版权所有者姓名，二次开发者可以加注二次版权所有者。
     16           * 但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     17           * 宿迁学院不负责由于使用本代码所带来的任何事故、法律责任或相关不良影响。
     18           * 宿迁学院无义务解释、说明本代码的具体原理、功能、实现方法。
     19           * 除非宿迁学院[SQC]授权，开发者不得将本代码用于商业产品。
     20           */
     21          #include "common.h"
     22          #include "SQC_ME3000.h"
     23          #include "HW_UART.h"
     24          

   \                                 In section .bss, align 4
     25          struct _ME3000_PIB  gprs_pib;  
   \                     gprs_pib:
   \   00000000                      DS8 1072
     26             
     27          //初始化模块

   \                                 In section .text, align 2, keep-with-next
     28          uint8 SQC_ME3000_Init()
     29          {
   \                     SQC_ME3000_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     30            uint8 temp =0;
   \   00000002   0x2400             MOVS     R4,#+0
     31            printf("Start device,waiting...\n"); 
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable10
   \   00000008   0x.... 0x....      BL       printf
     32            gprs_pib.Rxlen= 0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   00000012   0xF8A1 0x0400      STRH     R0,[R1, #+1024]
     33            gprs_pib.Rxflag = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   0000001C   0xF881 0x0402      STRB     R0,[R1, #+1026]
     34            gprs_pib.msgnum = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   00000026   0xF881 0x042C      STRB     R0,[R1, #+1068]
     35            LPLD_GPIO_Output_b(PTC,14,0);
   \   0000002A   0x2200             MOVS     R2,#+0
   \   0000002C   0x210E             MOVS     R1,#+14
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable10_2  ;; 0x400ff080
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Output_b
     36            delay();
   \   00000036   0x.... 0x....      BL       delay
     37            LPLD_GPIO_Output_b(PTC,14,1);
   \   0000003A   0x2201             MOVS     R2,#+1
   \   0000003C   0x210E             MOVS     R1,#+14
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable10_2  ;; 0x400ff080
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Output_b
     38            LPLD_GPIO_Output_b(PTC,19,1);
   \   00000046   0x2201             MOVS     R2,#+1
   \   00000048   0x2113             MOVS     R1,#+19
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable10_2  ;; 0x400ff080
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Output_b
     39            delay();  delay();
   \   00000052   0x.... 0x....      BL       delay
   \   00000056   0x.... 0x....      BL       delay
     40            delay();  delay();
   \   0000005A   0x.... 0x....      BL       delay
   \   0000005E   0x.... 0x....      BL       delay
     41            delay();  delay();
   \   00000062   0x.... 0x....      BL       delay
   \   00000066   0x.... 0x....      BL       delay
     42            delay();  delay();
   \   0000006A   0x.... 0x....      BL       delay
   \   0000006E   0x.... 0x....      BL       delay
     43            LPLD_GPIO_Output_b(PTC,19,0);
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0x2113             MOVS     R1,#+19
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable10_2  ;; 0x400ff080
   \   0000007A   0x.... 0x....      BL       LPLD_GPIO_Output_b
     44            while(1)
     45            {
     46              if(gprs_pib.Rxflag == 2 && temp == 0)
   \                     ??SQC_ME3000_Init_0: (+1)
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   00000082   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   00000086   0x2802             CMP      R0,#+2
   \   00000088   0xD112             BNE.N    ??SQC_ME3000_Init_1
   \   0000008A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008C   0x2C00             CMP      R4,#+0
   \   0000008E   0xD10F             BNE.N    ??SQC_ME3000_Init_1
     47              {
     48                if (strstr(gprs_pib.Rxbuf,"+CFUN: 1") != 0)
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable10_3
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   00000098   0x.... 0x....      BL       strstr
   \   0000009C   0x2800             CMP      R0,#+0
   \   0000009E   0xD001             BEQ.N    ??SQC_ME3000_Init_2
     49                  temp += 2;
   \   000000A0   0x1CA4             ADDS     R4,R4,#+2
   \   000000A2   0xE000             B.N      ??SQC_ME3000_Init_3
     50                else 
     51                  temp += 1;
   \                     ??SQC_ME3000_Init_2: (+1)
   \   000000A4   0x1C64             ADDS     R4,R4,#+1
     52                gprs_pib.Rxflag = 0;
   \                     ??SQC_ME3000_Init_3: (+1)
   \   000000A6   0x2000             MOVS     R0,#+0
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   000000AC   0xF881 0x0402      STRB     R0,[R1, #+1026]
     53              }
     54              if(gprs_pib.Rxflag == 2 && temp > 0)
   \                     ??SQC_ME3000_Init_1: (+1)
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   000000B4   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   000000B8   0x2802             CMP      R0,#+2
   \   000000BA   0xD1E0             BNE.N    ??SQC_ME3000_Init_0
   \   000000BC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000BE   0x2C00             CMP      R4,#+0
   \   000000C0   0xD0DD             BEQ.N    ??SQC_ME3000_Init_0
     55              {
     56                if (strstr(gprs_pib.Rxbuf,"+CPIN: READY") != 0)
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable10_4
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   000000CA   0x.... 0x....      BL       strstr
   \   000000CE   0x2800             CMP      R0,#+0
   \   000000D0   0xD001             BEQ.N    ??SQC_ME3000_Init_4
     57                  temp += 2;
   \   000000D2   0x1CA4             ADDS     R4,R4,#+2
   \   000000D4   0xE000             B.N      ??SQC_ME3000_Init_5
     58                else 
     59                  temp +=1;
   \                     ??SQC_ME3000_Init_4: (+1)
   \   000000D6   0x1C64             ADDS     R4,R4,#+1
     60                if (temp == 4)
   \                     ??SQC_ME3000_Init_5: (+1)
   \   000000D8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000DA   0x2C04             CMP      R4,#+4
   \   000000DC   0xD107             BNE.N    ??SQC_ME3000_Init_6
     61                {
     62                  gprs_pib.Rxflag = 0;
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   000000E4   0xF881 0x0402      STRB     R0,[R1, #+1026]
     63                  break;
     64                }
     65                else
     66                {
     67                  gprs_pib.Rxflag = 0;
     68                  return FALSE;
     69                }
     70              }   
     71            }
     72            return SQC_ME3000_Creg();
   \   000000E8   0x.... 0x....      BL       SQC_ME3000_Creg
   \   000000EC   0xE005             B.N      ??SQC_ME3000_Init_7
   \                     ??SQC_ME3000_Init_6: (+1)
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   000000F4   0xF881 0x0402      STRB     R0,[R1, #+1026]
   \   000000F8   0x2000             MOVS     R0,#+0
   \                     ??SQC_ME3000_Init_7: (+1)
   \   000000FA   0xBD10             POP      {R4,PC}          ;; return
     73          
     74          }
     75          
     76          //获取pib指针

   \                                 In section .text, align 2, keep-with-next
     77          struct _ME3000_PIB* SQC_ME3000_GetPib()
     78          {
     79            return &gprs_pib;
   \                     SQC_ME3000_GetPib: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   00000004   0x4770             BX       LR               ;; return
     80          }
     81           
     82          //查询是否入网

   \                                 In section .text, align 2, keep-with-next
     83          uint8 SQC_ME3000_Creg()
     84          {
   \                     SQC_ME3000_Creg: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
     85            uint8 cmd[20];
     86            gprs_pib.Rxflag = 0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   0000000A   0xF881 0x0402      STRB     R0,[R1, #+1026]
     87            sprintf(cmd,"AT+CREG?\r\n");
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable10_5
   \   00000012   0xA800             ADD      R0,SP,#+0
   \   00000014   0x.... 0x....      BL       sprintf
   \   00000018   0xE004             B.N      ??SQC_ME3000_Creg_0
     88            while(1)
     89            {
     90              LPLD_UART_PutCharArr(UART5,cmd,strlen(cmd));
     91              delay();delay();
     92              if(gprs_pib.Rxflag == 2)
     93              {
     94                if(strstr(gprs_pib.Rxbuf,"+CREG: 0, 1") != 0)
     95                {
     96                  gprs_pib.Rxflag = 0;
     97                  return TRUE;
     98                }
     99                else
    100                  gprs_pib.Rxflag = 0;
   \                     ??SQC_ME3000_Creg_1: (+1)
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   00000020   0xF881 0x0402      STRB     R0,[R1, #+1026]
   \                     ??SQC_ME3000_Creg_0: (+1)
   \   00000024   0xA800             ADD      R0,SP,#+0
   \   00000026   0x.... 0x....      BL       strlen
   \   0000002A   0x0002             MOVS     R2,R0
   \   0000002C   0xA900             ADD      R1,SP,#+0
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable10_6  ;; 0x400eb000
   \   00000032   0x.... 0x....      BL       LPLD_UART_PutCharArr
   \   00000036   0x.... 0x....      BL       delay
   \   0000003A   0x.... 0x....      BL       delay
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   00000042   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   00000046   0x2802             CMP      R0,#+2
   \   00000048   0xD1EC             BNE.N    ??SQC_ME3000_Creg_0
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable10_7
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   00000052   0x.... 0x....      BL       strstr
   \   00000056   0x2800             CMP      R0,#+0
   \   00000058   0xD0DF             BEQ.N    ??SQC_ME3000_Creg_1
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   00000060   0xF881 0x0402      STRB     R0,[R1, #+1026]
   \   00000064   0x2001             MOVS     R0,#+1
   \   00000066   0xB005             ADD      SP,SP,#+20
   \   00000068   0xBD00             POP      {PC}             ;; return
    101              }
    102            }
    103          }
    104          
    105          //打开gprs网络

   \                                 In section .text, align 2, keep-with-next
    106          uint8 SQC_ME3000_Open()
    107          {
   \                     SQC_ME3000_Open: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    108            uint8 cmd[20];
    109            gprs_pib.Rxflag = 0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   0000000A   0xF881 0x0402      STRB     R0,[R1, #+1026]
    110            sprintf(cmd,"AT+ZPPPOPEN\r\n");
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   00000012   0xA800             ADD      R0,SP,#+0
   \   00000014   0x.... 0x....      BL       sprintf
    111            LPLD_UART_PutCharArr(UART5,cmd,strlen(cmd));
   \   00000018   0xA800             ADD      R0,SP,#+0
   \   0000001A   0x.... 0x....      BL       strlen
   \   0000001E   0x0002             MOVS     R2,R0
   \   00000020   0xA900             ADD      R1,SP,#+0
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable10_6  ;; 0x400eb000
   \   00000026   0x.... 0x....      BL       LPLD_UART_PutCharArr
    112            while(1)
    113            {
    114              delay();delay();
   \                     ??SQC_ME3000_Open_0: (+1)
   \   0000002A   0x.... 0x....      BL       delay
   \   0000002E   0x.... 0x....      BL       delay
    115              if(gprs_pib.Rxflag == 2)
   \   00000032   0x....             LDR.N    R0,??DataTable10_1
   \   00000034   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   00000038   0x2802             CMP      R0,#+2
   \   0000003A   0xD1F6             BNE.N    ??SQC_ME3000_Open_0
    116              {
    117                if(strstr(gprs_pib.Rxbuf,"+ZPPPOPEN:CONNECTED") != 0
    118                   || strstr(gprs_pib.Rxbuf,"+ZPPPOPEN:ESTABLISHED") != 0)
   \   0000003C   0x....             LDR.N    R1,??DataTable10_9
   \   0000003E   0x....             LDR.N    R0,??DataTable10_1
   \   00000040   0x.... 0x....      BL       strstr
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD105             BNE.N    ??SQC_ME3000_Open_1
   \   00000048   0x....             LDR.N    R1,??DataTable10_10
   \   0000004A   0x....             LDR.N    R0,??DataTable10_1
   \   0000004C   0x.... 0x....      BL       strstr
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD001             BEQ.N    ??SQC_ME3000_Open_2
    119                  return TRUE;
   \                     ??SQC_ME3000_Open_1: (+1)
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0xE000             B.N      ??SQC_ME3000_Open_3
    120                else
    121                  return FALSE;
   \                     ??SQC_ME3000_Open_2: (+1)
   \   00000058   0x2000             MOVS     R0,#+0
   \                     ??SQC_ME3000_Open_3: (+1)
   \   0000005A   0xB005             ADD      SP,SP,#+20
   \   0000005C   0xBD00             POP      {PC}             ;; return
    122              }
    123            }
    124          }
    125          
    126          //关闭gprs网络

   \                                 In section .text, align 2, keep-with-next
    127          uint8 SQC_ME3000_Close()
    128          {
   \                     SQC_ME3000_Close: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    129            uint8 cmd[20];
    130            gprs_pib.Rxflag = 0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable10_1
   \   00000008   0xF881 0x0402      STRB     R0,[R1, #+1026]
    131            sprintf(cmd,"AT+ZPPPCLOSE\r\n");
   \   0000000C   0x....             LDR.N    R1,??DataTable10_11
   \   0000000E   0xA800             ADD      R0,SP,#+0
   \   00000010   0x.... 0x....      BL       sprintf
    132            LPLD_UART_PutCharArr(UART5,cmd,strlen(cmd));
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x.... 0x....      BL       strlen
   \   0000001A   0x0002             MOVS     R2,R0
   \   0000001C   0xA900             ADD      R1,SP,#+0
   \   0000001E   0x....             LDR.N    R0,??DataTable10_6  ;; 0x400eb000
   \   00000020   0x.... 0x....      BL       LPLD_UART_PutCharArr
    133            while(1)
    134            {
    135              delay();
   \                     ??SQC_ME3000_Close_0: (+1)
   \   00000024   0x.... 0x....      BL       delay
    136              if(gprs_pib.Rxflag == 2)
   \   00000028   0x....             LDR.N    R0,??DataTable10_1
   \   0000002A   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD1F8             BNE.N    ??SQC_ME3000_Close_0
    137              {
    138                if(strstr(gprs_pib.Rxbuf,"+ZPPPCLOSE:OK") != 0
    139                   || strstr(gprs_pib.Rxbuf,"+ZPPPCLOSE:DISCONNECTED") != 0)
   \   00000032   0x....             LDR.N    R1,??DataTable10_12
   \   00000034   0x....             LDR.N    R0,??DataTable10_1
   \   00000036   0x.... 0x....      BL       strstr
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD105             BNE.N    ??SQC_ME3000_Close_1
   \   0000003E   0x....             LDR.N    R1,??DataTable10_13
   \   00000040   0x....             LDR.N    R0,??DataTable10_1
   \   00000042   0x.... 0x....      BL       strstr
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD001             BEQ.N    ??SQC_ME3000_Close_2
    140                  return TRUE;
   \                     ??SQC_ME3000_Close_1: (+1)
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0xE000             B.N      ??SQC_ME3000_Close_3
    141                else
    142                  return FALSE;
   \                     ??SQC_ME3000_Close_2: (+1)
   \   0000004E   0x2000             MOVS     R0,#+0
   \                     ??SQC_ME3000_Close_3: (+1)
   \   00000050   0xB005             ADD      SP,SP,#+20
   \   00000052   0xBD00             POP      {PC}             ;; return
    143              }
    144            }
    145          }
    146          
    147          //查询gprs连接状态

   \                                 In section .text, align 2, keep-with-next
    148          uint8 SQC_ME3000_Pppstat()
    149          {
   \                     SQC_ME3000_Pppstat: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    150            uint8 cmd[20];
    151            gprs_pib.Rxflag = 0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable10_1
   \   00000008   0xF881 0x0402      STRB     R0,[R1, #+1026]
    152            sprintf(cmd,"AT+ZPPPSTATUS\r\n");
   \   0000000C   0x....             LDR.N    R1,??DataTable10_14
   \   0000000E   0xA800             ADD      R0,SP,#+0
   \   00000010   0x.... 0x....      BL       sprintf
    153            LPLD_UART_PutCharArr(UART5,cmd,strlen(cmd));
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x.... 0x....      BL       strlen
   \   0000001A   0x0002             MOVS     R2,R0
   \   0000001C   0xA900             ADD      R1,SP,#+0
   \   0000001E   0x....             LDR.N    R0,??DataTable10_6  ;; 0x400eb000
   \   00000020   0x.... 0x....      BL       LPLD_UART_PutCharArr
    154            while(1)
    155            {
    156              delay();
   \                     ??SQC_ME3000_Pppstat_0: (+1)
   \   00000024   0x.... 0x....      BL       delay
    157              if(gprs_pib.Rxflag == 2)
   \   00000028   0x....             LDR.N    R0,??DataTable10_1
   \   0000002A   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD1F8             BNE.N    ??SQC_ME3000_Pppstat_0
    158              {
    159                if(strstr(gprs_pib.Rxbuf,"+ZPPPSTATUS:ESTABLISHED") != 0)
   \   00000032   0x....             LDR.N    R1,??DataTable10_15
   \   00000034   0x....             LDR.N    R0,??DataTable10_1
   \   00000036   0x.... 0x....      BL       strstr
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD001             BEQ.N    ??SQC_ME3000_Pppstat_1
    160                  return TRUE;
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0xE000             B.N      ??SQC_ME3000_Pppstat_2
    161                else
    162                  return FALSE;
   \                     ??SQC_ME3000_Pppstat_1: (+1)
   \   00000042   0x2000             MOVS     R0,#+0
   \                     ??SQC_ME3000_Pppstat_2: (+1)
   \   00000044   0xB005             ADD      SP,SP,#+20
   \   00000046   0xBD00             POP      {PC}             ;; return
    163              }
    164            }
    165          }
    166          
    167          //使用tcp连接服务器

   \                                 In section .text, align 2, keep-with-next
    168          uint8 SQC_ME3000_Connect(struct _in_addr addr)
    169          {
   \                     SQC_ME3000_Connect: (+1)
   \   00000000   0xB503             PUSH     {R0,R1,LR}
   \   00000002   0xB091             SUB      SP,SP,#+68
    170            uint8 cmd[50];
    171            gprs_pib.Rxflag = 0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable10_1
   \   00000008   0xF881 0x0402      STRB     R0,[R1, #+1026]
    172            sprintf(cmd,"AT+ZIPSETUP=1,%d.%d.%d.%d,%d\r\n",addr.s_addr[0],addr.s_addr[1],addr.s_addr[2],addr.s_addr[3],addr.s_port);
   \   0000000C   0xF8BD 0x0048      LDRH     R0,[SP, #+72]
   \   00000010   0x9002             STR      R0,[SP, #+8]
   \   00000012   0xF89D 0x0047      LDRB     R0,[SP, #+71]
   \   00000016   0x9001             STR      R0,[SP, #+4]
   \   00000018   0xF89D 0x0046      LDRB     R0,[SP, #+70]
   \   0000001C   0x9000             STR      R0,[SP, #+0]
   \   0000001E   0xF89D 0x3045      LDRB     R3,[SP, #+69]
   \   00000022   0xF89D 0x2044      LDRB     R2,[SP, #+68]
   \   00000026   0x....             LDR.N    R1,??DataTable10_16
   \   00000028   0xA803             ADD      R0,SP,#+12
   \   0000002A   0x.... 0x....      BL       sprintf
    173            LPLD_UART_PutCharArr(UART5,cmd,strlen(cmd));
   \   0000002E   0xA803             ADD      R0,SP,#+12
   \   00000030   0x.... 0x....      BL       strlen
   \   00000034   0x0002             MOVS     R2,R0
   \   00000036   0xA903             ADD      R1,SP,#+12
   \   00000038   0x....             LDR.N    R0,??DataTable10_6  ;; 0x400eb000
   \   0000003A   0x.... 0x....      BL       LPLD_UART_PutCharArr
    174            while(1)
    175            {
    176              delay();
   \                     ??SQC_ME3000_Connect_0: (+1)
   \   0000003E   0x.... 0x....      BL       delay
    177              if(gprs_pib.Rxflag == 2)
   \   00000042   0x....             LDR.N    R0,??DataTable10_1
   \   00000044   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   00000048   0x2802             CMP      R0,#+2
   \   0000004A   0xD1F8             BNE.N    ??SQC_ME3000_Connect_0
    178              {
    179                if(strstr(gprs_pib.Rxbuf,"+ZIPSETUP:CONNECTED") != 0)
   \   0000004C   0x....             LDR.N    R1,??DataTable10_17
   \   0000004E   0x....             LDR.N    R0,??DataTable10_1
   \   00000050   0x.... 0x....      BL       strstr
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD001             BEQ.N    ??SQC_ME3000_Connect_1
    180                  return TRUE;
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0xE000             B.N      ??SQC_ME3000_Connect_2
    181                else
    182                  return FALSE;
   \                     ??SQC_ME3000_Connect_1: (+1)
   \   0000005C   0x2000             MOVS     R0,#+0
   \                     ??SQC_ME3000_Connect_2: (+1)
   \   0000005E   0xB013             ADD      SP,SP,#+76
   \   00000060   0xBD00             POP      {PC}             ;; return
    183              }
    184            }
    185          }
    186          
    187          //查询tcp连接状态

   \                                 In section .text, align 2, keep-with-next
    188          uint8 SQC_ME3000_Tcpstat()
    189          {
   \                     SQC_ME3000_Tcpstat: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    190            uint8 cmd[20];
    191            gprs_pib.Rxflag = 0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable10_1
   \   00000008   0xF881 0x0402      STRB     R0,[R1, #+1026]
    192            sprintf(cmd,"AT+ZIPSTATUS=1\r\n");
   \   0000000C   0x....             LDR.N    R1,??DataTable10_18
   \   0000000E   0xA800             ADD      R0,SP,#+0
   \   00000010   0x.... 0x....      BL       sprintf
    193            LPLD_UART_PutCharArr(UART5,cmd,strlen(cmd));
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x.... 0x....      BL       strlen
   \   0000001A   0x0002             MOVS     R2,R0
   \   0000001C   0xA900             ADD      R1,SP,#+0
   \   0000001E   0x....             LDR.N    R0,??DataTable10_6  ;; 0x400eb000
   \   00000020   0x.... 0x....      BL       LPLD_UART_PutCharArr
    194            while(1)
    195            {
    196              delay();
   \                     ??SQC_ME3000_Tcpstat_0: (+1)
   \   00000024   0x.... 0x....      BL       delay
    197              if(gprs_pib.Rxflag == 2)
   \   00000028   0x....             LDR.N    R0,??DataTable10_1
   \   0000002A   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD1F8             BNE.N    ??SQC_ME3000_Tcpstat_0
    198              {
    199                if(strstr(gprs_pib.Rxbuf,"+ZIPSTATUS:ESTABLISHED") != 0)
   \   00000032   0x....             LDR.N    R1,??DataTable10_19
   \   00000034   0x....             LDR.N    R0,??DataTable10_1
   \   00000036   0x.... 0x....      BL       strstr
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD001             BEQ.N    ??SQC_ME3000_Tcpstat_1
    200                  return TRUE;
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0xE000             B.N      ??SQC_ME3000_Tcpstat_2
    201                else
    202                  return FALSE;
   \                     ??SQC_ME3000_Tcpstat_1: (+1)
   \   00000042   0x2000             MOVS     R0,#+0
   \                     ??SQC_ME3000_Tcpstat_2: (+1)
   \   00000044   0xB005             ADD      SP,SP,#+20
   \   00000046   0xBD00             POP      {PC}             ;; return
    203              }
    204            }
    205          }
    206          
    207          //关闭tcp连接

   \                                 In section .text, align 2, keep-with-next
    208          uint8 SQC_ME3000_Disconnect()
    209          {
   \                     SQC_ME3000_Disconnect: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    210            uint8 cmd[20];
    211            gprs_pib.Rxflag = 0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable10_1
   \   00000008   0xF881 0x0402      STRB     R0,[R1, #+1026]
    212            sprintf(cmd,"AT+ZIPCLOSE=1\r\n");
   \   0000000C   0x....             LDR.N    R1,??DataTable10_20
   \   0000000E   0xA800             ADD      R0,SP,#+0
   \   00000010   0x.... 0x....      BL       sprintf
    213            LPLD_UART_PutCharArr(UART5,cmd,strlen(cmd));
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x.... 0x....      BL       strlen
   \   0000001A   0x0002             MOVS     R2,R0
   \   0000001C   0xA900             ADD      R1,SP,#+0
   \   0000001E   0x....             LDR.N    R0,??DataTable10_6  ;; 0x400eb000
   \   00000020   0x.... 0x....      BL       LPLD_UART_PutCharArr
    214            while(1)
    215            {
    216              delay();
   \                     ??SQC_ME3000_Disconnect_0: (+1)
   \   00000024   0x.... 0x....      BL       delay
    217              if(gprs_pib.Rxflag == 2)
   \   00000028   0x....             LDR.N    R0,??DataTable10_1
   \   0000002A   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD1F8             BNE.N    ??SQC_ME3000_Disconnect_0
    218              {
    219                if(strstr(gprs_pib.Rxbuf,"+ZIPCLOSE:OK") != 0)
   \   00000032   0x....             LDR.N    R1,??DataTable10_21
   \   00000034   0x....             LDR.N    R0,??DataTable10_1
   \   00000036   0x.... 0x....      BL       strstr
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD001             BEQ.N    ??SQC_ME3000_Disconnect_1
    220                  return TRUE;
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0xE000             B.N      ??SQC_ME3000_Disconnect_2
    221                else
    222                  return FALSE;
   \                     ??SQC_ME3000_Disconnect_1: (+1)
   \   00000042   0x2000             MOVS     R0,#+0
   \                     ??SQC_ME3000_Disconnect_2: (+1)
   \   00000044   0xB005             ADD      SP,SP,#+20
   \   00000046   0xBD00             POP      {PC}             ;; return
    223              }
    224            }
    225          }
    226          
    227          //向服务器发送数据

   \                                 In section .text, align 2, keep-with-next
    228          uint8 SQC_ME3000_Send(uint8 * msg,uint16 len)
    229          {
   \                     SQC_ME3000_Send: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    230            uint8 cmd[20];
    231            gprs_pib.Rxflag = 0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR.N    R1,??DataTable10_1
   \   0000000C   0xF881 0x0402      STRB     R0,[R1, #+1026]
    232            sprintf(cmd,"AT+ZIPSEND=1,%d\r\n",len);
   \   00000010   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000012   0x002A             MOVS     R2,R5
   \   00000014   0x....             LDR.N    R1,??DataTable10_22
   \   00000016   0xA800             ADD      R0,SP,#+0
   \   00000018   0x.... 0x....      BL       sprintf
    233            LPLD_UART_PutCharArr(UART5,cmd,strlen(cmd));
   \   0000001C   0xA800             ADD      R0,SP,#+0
   \   0000001E   0x.... 0x....      BL       strlen
   \   00000022   0x0002             MOVS     R2,R0
   \   00000024   0xA900             ADD      R1,SP,#+0
   \   00000026   0x....             LDR.N    R0,??DataTable10_6  ;; 0x400eb000
   \   00000028   0x.... 0x....      BL       LPLD_UART_PutCharArr
    234            while(1)
    235            {
    236              delay();
   \                     ??SQC_ME3000_Send_0: (+1)
   \   0000002C   0x.... 0x....      BL       delay
    237              if(gprs_pib.Rxflag == 3)
   \   00000030   0x....             LDR.N    R0,??DataTable10_1
   \   00000032   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   00000036   0x2803             CMP      R0,#+3
   \   00000038   0xD111             BNE.N    ??SQC_ME3000_Send_1
    238              {
    239                gprs_pib.Rxflag = 0;
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x....             LDR.N    R1,??DataTable10_1
   \   0000003E   0xF881 0x0402      STRB     R0,[R1, #+1026]
    240                LPLD_UART_PutCharArr(UART5,msg,len);
   \   00000042   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000044   0x002A             MOVS     R2,R5
   \   00000046   0x0021             MOVS     R1,R4
   \   00000048   0x....             LDR.N    R0,??DataTable10_6  ;; 0x400eb000
   \   0000004A   0x.... 0x....      BL       LPLD_UART_PutCharArr
    241                LPLD_UART_PutChar(UART5,0x0D);
   \   0000004E   0x210D             MOVS     R1,#+13
   \   00000050   0x....             LDR.N    R0,??DataTable10_6  ;; 0x400eb000
   \   00000052   0x.... 0x....      BL       LPLD_UART_PutChar
    242                LPLD_UART_PutChar(UART5,0x0A);
   \   00000056   0x210A             MOVS     R1,#+10
   \   00000058   0x....             LDR.N    R0,??DataTable10_6  ;; 0x400eb000
   \   0000005A   0x.... 0x....      BL       LPLD_UART_PutChar
    243              }
    244              if(gprs_pib.Rxflag == 2)
   \                     ??SQC_ME3000_Send_1: (+1)
   \   0000005E   0x....             LDR.N    R0,??DataTable10_1
   \   00000060   0xF890 0x0402      LDRB     R0,[R0, #+1026]
   \   00000064   0x2802             CMP      R0,#+2
   \   00000066   0xD1E1             BNE.N    ??SQC_ME3000_Send_0
    245              {
    246                if(strstr(gprs_pib.Rxbuf,"+ZIPSEND:OK") != 0)
   \   00000068   0x....             LDR.N    R1,??DataTable10_23
   \   0000006A   0x....             LDR.N    R0,??DataTable10_1
   \   0000006C   0x.... 0x....      BL       strstr
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xD001             BEQ.N    ??SQC_ME3000_Send_2
    247                  return TRUE;
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0xE000             B.N      ??SQC_ME3000_Send_3
    248                else
    249                  return FALSE;
   \                     ??SQC_ME3000_Send_2: (+1)
   \   00000078   0x2000             MOVS     R0,#+0
   \                     ??SQC_ME3000_Send_3: (+1)
   \   0000007A   0xB005             ADD      SP,SP,#+20
   \   0000007C   0xBD30             POP      {R4,R5,PC}       ;; return
    250              }
    251            }
    252          }
    253          
    254          //解析从服务器接收到的数据

   \                                 In section .text, align 2, keep-with-next
    255          uint8 SQC_ME3000_Recive(uint8* cmd,uint16 len)
    256          {
   \                     SQC_ME3000_Recive: (+1)
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    257            uint8 rxlen[10];
    258            uint8 i = 0;
   \   00000004   0x2000             MOVS     R0,#+0
    259            if(cmd[0] == '+' && cmd[1] == 'Z' &&
    260               cmd[2] == 'I' && cmd[3] == 'P' &&
    261               cmd[4] == 'R' && cmd[5] == 'E' &&
    262               cmd[6] == 'C' && cmd[7] == 'V' )
   \   00000006   0x7821             LDRB     R1,[R4, #+0]
   \   00000008   0x292B             CMP      R1,#+43
   \   0000000A   0xD15C             BNE.N    ??SQC_ME3000_Recive_0
   \   0000000C   0x7861             LDRB     R1,[R4, #+1]
   \   0000000E   0x295A             CMP      R1,#+90
   \   00000010   0xD159             BNE.N    ??SQC_ME3000_Recive_0
   \   00000012   0x78A1             LDRB     R1,[R4, #+2]
   \   00000014   0x2949             CMP      R1,#+73
   \   00000016   0xD156             BNE.N    ??SQC_ME3000_Recive_0
   \   00000018   0x78E1             LDRB     R1,[R4, #+3]
   \   0000001A   0x2950             CMP      R1,#+80
   \   0000001C   0xD153             BNE.N    ??SQC_ME3000_Recive_0
   \   0000001E   0x7921             LDRB     R1,[R4, #+4]
   \   00000020   0x2952             CMP      R1,#+82
   \   00000022   0xD150             BNE.N    ??SQC_ME3000_Recive_0
   \   00000024   0x7961             LDRB     R1,[R4, #+5]
   \   00000026   0x2945             CMP      R1,#+69
   \   00000028   0xD14D             BNE.N    ??SQC_ME3000_Recive_0
   \   0000002A   0x79A1             LDRB     R1,[R4, #+6]
   \   0000002C   0x2943             CMP      R1,#+67
   \   0000002E   0xD14A             BNE.N    ??SQC_ME3000_Recive_0
   \   00000030   0x79E1             LDRB     R1,[R4, #+7]
   \   00000032   0x2956             CMP      R1,#+86
   \   00000034   0xD147             BNE.N    ??SQC_ME3000_Recive_0
    263            {
    264              if(gprs_pib.msgnum >= 10)
   \   00000036   0x....             LDR.N    R1,??DataTable10_1
   \   00000038   0xF891 0x142C      LDRB     R1,[R1, #+1068]
   \   0000003C   0x290A             CMP      R1,#+10
   \   0000003E   0xDB01             BLT.N    ??SQC_ME3000_Recive_1
    265                return FALSE;
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0xE041             B.N      ??SQC_ME3000_Recive_2
    266              cmd += 11;
   \                     ??SQC_ME3000_Recive_1: (+1)
   \   00000044   0xF204 0x040B      ADDW     R4,R4,#+11
    267              do
    268              {
    269                rxlen[i] = *cmd;
   \                     ??SQC_ME3000_Recive_3: (+1)
   \   00000048   0x7821             LDRB     R1,[R4, #+0]
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004C   0xAA00             ADD      R2,SP,#+0
   \   0000004E   0x5481             STRB     R1,[R0, R2]
    270                i++;
   \   00000050   0x1C40             ADDS     R0,R0,#+1
    271                cmd++;
   \   00000052   0x1C64             ADDS     R4,R4,#+1
    272              }while(*cmd != ',');
   \   00000054   0x7821             LDRB     R1,[R4, #+0]
   \   00000056   0x292C             CMP      R1,#+44
   \   00000058   0xD1F6             BNE.N    ??SQC_ME3000_Recive_3
    273              cmd++;
   \   0000005A   0x1C64             ADDS     R4,R4,#+1
    274              rxlen[i] = 0;
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000060   0xAA00             ADD      R2,SP,#+0
   \   00000062   0x5481             STRB     R1,[R0, R2]
    275              len = atoi(rxlen);
   \   00000064   0xA800             ADD      R0,SP,#+0
   \   00000066   0x.... 0x....      BL       atoi
   \   0000006A   0x0005             MOVS     R5,R0
    276              gprs_pib.Rxmsg[gprs_pib.msgnum] = (uint8 *)malloc(len+1);
   \   0000006C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000006E   0x1C68             ADDS     R0,R5,#+1
   \   00000070   0x.... 0x....      BL       malloc
   \   00000074   0x....             LDR.N    R1,??DataTable10_1
   \   00000076   0xF891 0x142C      LDRB     R1,[R1, #+1068]
   \   0000007A   0x....             LDR.N    R2,??DataTable10_1
   \   0000007C   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   00000080   0xF8C1 0x0404      STR      R0,[R1, #+1028]
    277              strncpy(gprs_pib.Rxmsg[gprs_pib.msgnum],cmd,len);
   \   00000084   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000086   0x002A             MOVS     R2,R5
   \   00000088   0x0021             MOVS     R1,R4
   \   0000008A   0x....             LDR.N    R0,??DataTable10_1
   \   0000008C   0xF890 0x042C      LDRB     R0,[R0, #+1068]
   \   00000090   0x....             LDR.N    R3,??DataTable10_1
   \   00000092   0xEB13 0x0080      ADDS     R0,R3,R0, LSL #+2
   \   00000096   0xF8D0 0x0404      LDR      R0,[R0, #+1028]
   \   0000009A   0x.... 0x....      BL       strncpy
    278              printf("Recv Msg:%s\n",gprs_pib.Rxmsg[gprs_pib.msgnum]);
   \   0000009E   0x....             LDR.N    R0,??DataTable10_1
   \   000000A0   0xF890 0x042C      LDRB     R0,[R0, #+1068]
   \   000000A4   0x....             LDR.N    R1,??DataTable10_1
   \   000000A6   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   000000AA   0xF8D0 0x1404      LDR      R1,[R0, #+1028]
   \   000000AE   0x....             LDR.N    R0,??DataTable10_24
   \   000000B0   0x.... 0x....      BL       printf
    279              gprs_pib.msgnum++;
   \   000000B4   0x....             LDR.N    R0,??DataTable10_1
   \   000000B6   0xF890 0x042C      LDRB     R0,[R0, #+1068]
   \   000000BA   0x1C40             ADDS     R0,R0,#+1
   \   000000BC   0x....             LDR.N    R1,??DataTable10_1
   \   000000BE   0xF881 0x042C      STRB     R0,[R1, #+1068]
    280              return TRUE;
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0xE000             B.N      ??SQC_ME3000_Recive_2
    281            }
    282            else
    283              return FALSE;      
   \                     ??SQC_ME3000_Recive_0: (+1)
   \   000000C6   0x2000             MOVS     R0,#+0
   \                     ??SQC_ME3000_Recive_2: (+1)
   \   000000C8   0xBD3E             POP      {R1-R5,PC}       ;; return
    284          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     `?<Constant "Start device,waiting...\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     gprs_pib

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x........         DC32     `?<Constant "+CFUN: 1">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x........         DC32     `?<Constant "+CPIN: READY">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \   00000000   0x........         DC32     `?<Constant "AT+CREG?\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \   00000000   0x400EB000         DC32     0x400eb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \   00000000   0x........         DC32     `?<Constant "+CREG: 0, 1">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \   00000000   0x........         DC32     `?<Constant "AT+ZPPPOPEN\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \   00000000   0x........         DC32     `?<Constant "+ZPPPOPEN:CONNECTED">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_10:
   \   00000000   0x........         DC32     `?<Constant "+ZPPPOPEN:ESTABLISHED">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_11:
   \   00000000   0x........         DC32     `?<Constant "AT+ZPPPCLOSE\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_12:
   \   00000000   0x........         DC32     `?<Constant "+ZPPPCLOSE:OK">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_13:
   \   00000000   0x........         DC32     `?<Constant "+ZPPPCLOSE:DISCONNECTED">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_14:
   \   00000000   0x........         DC32     `?<Constant "AT+ZPPPSTATUS\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_15:
   \   00000000   0x........         DC32     `?<Constant "+ZPPPSTATUS:ESTABLISHED">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_16:
   \   00000000   0x........         DC32     `?<Constant "AT+ZIPSETUP=1,%d.%d.%...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_17:
   \   00000000   0x........         DC32     `?<Constant "+ZIPSETUP:CONNECTED">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_18:
   \   00000000   0x........         DC32     `?<Constant "AT+ZIPSTATUS=1\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_19:
   \   00000000   0x........         DC32     `?<Constant "+ZIPSTATUS:ESTABLISHED">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_20:
   \   00000000   0x........         DC32     `?<Constant "AT+ZIPCLOSE=1\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_21:
   \   00000000   0x........         DC32     `?<Constant "+ZIPCLOSE:OK">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_22:
   \   00000000   0x........         DC32     `?<Constant "AT+ZIPSEND=1,%d\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_23:
   \   00000000   0x........         DC32     `?<Constant "+ZIPSEND:OK">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_24:
   \   00000000   0x........         DC32     `?<Constant "Recv Msg:%s\\n">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "Start device,waiting...\\n">`:
   \   00000000   0x53 0x74          DC8 "Start device,waiting...\012"
   \              0x61 0x72    
   \              0x74 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x2C 0x77    
   \              0x61 0x69    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "+CFUN: 1">`:
   \   00000000   0x2B 0x43          DC8 "+CFUN: 1"
   \              0x46 0x55    
   \              0x4E 0x3A    
   \              0x20 0x31    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "+CPIN: READY">`:
   \   00000000   0x2B 0x43          DC8 "+CPIN: READY"
   \              0x50 0x49    
   \              0x4E 0x3A    
   \              0x20 0x52    
   \              0x45 0x41    
   \              0x44 0x59    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+CREG?\\r\\n">`:
   \   00000000   0x41 0x54          DC8 "AT+CREG?\015\012"
   \              0x2B 0x43    
   \              0x52 0x45    
   \              0x47 0x3F    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "+CREG: 0, 1">`:
   \   00000000   0x2B 0x43          DC8 "+CREG: 0, 1"
   \              0x52 0x45    
   \              0x47 0x3A    
   \              0x20 0x30    
   \              0x2C 0x20    
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+ZPPPOPEN\\r\\n">`:
   \   00000000   0x41 0x54          DC8 "AT+ZPPPOPEN\015\012"
   \              0x2B 0x5A    
   \              0x50 0x50    
   \              0x50 0x4F    
   \              0x50 0x45    
   \              0x4E 0x0D    
   \              0x0A 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "+ZPPPOPEN:CONNECTED">`:
   \   00000000   0x2B 0x5A          DC8 "+ZPPPOPEN:CONNECTED"
   \              0x50 0x50    
   \              0x50 0x4F    
   \              0x50 0x45    
   \              0x4E 0x3A    
   \              0x43 0x4F    
   \              0x4E 0x4E    
   \              0x45 0x43    
   \              0x54 0x45    
   \              0x44 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "+ZPPPOPEN:ESTABLISHED">`:
   \   00000000   0x2B 0x5A          DC8 "+ZPPPOPEN:ESTABLISHED"
   \              0x50 0x50    
   \              0x50 0x4F    
   \              0x50 0x45    
   \              0x4E 0x3A    
   \              0x45 0x53    
   \              0x54 0x41    
   \              0x42 0x4C    
   \              0x49 0x53    
   \              0x48 0x45    
   \              0x44 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+ZPPPCLOSE\\r\\n">`:
   \   00000000   0x41 0x54          DC8 "AT+ZPPPCLOSE\015\012"
   \              0x2B 0x5A    
   \              0x50 0x50    
   \              0x50 0x43    
   \              0x4C 0x4F    
   \              0x53 0x45    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "+ZPPPCLOSE:OK">`:
   \   00000000   0x2B 0x5A          DC8 "+ZPPPCLOSE:OK"
   \              0x50 0x50    
   \              0x50 0x43    
   \              0x4C 0x4F    
   \              0x53 0x45    
   \              0x3A 0x4F    
   \              0x4B 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "+ZPPPCLOSE:DISCONNECTED">`:
   \   00000000   0x2B 0x5A          DC8 "+ZPPPCLOSE:DISCONNECTED"
   \              0x50 0x50    
   \              0x50 0x43    
   \              0x4C 0x4F    
   \              0x53 0x45    
   \              0x3A 0x44    
   \              0x49 0x53    
   \              0x43 0x4F    
   \              0x4E 0x4E    
   \              0x45 0x43    
   \              0x54 0x45    
   \              0x44 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+ZPPPSTATUS\\r\\n">`:
   \   00000000   0x41 0x54          DC8 "AT+ZPPPSTATUS\015\012"
   \              0x2B 0x5A    
   \              0x50 0x50    
   \              0x50 0x53    
   \              0x54 0x41    
   \              0x54 0x55    
   \              0x53 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "+ZPPPSTATUS:ESTABLISHED">`:
   \   00000000   0x2B 0x5A          DC8 "+ZPPPSTATUS:ESTABLISHED"
   \              0x50 0x50    
   \              0x50 0x53    
   \              0x54 0x41    
   \              0x54 0x55    
   \              0x53 0x3A    
   \              0x45 0x53    
   \              0x54 0x41    
   \              0x42 0x4C    
   \              0x49 0x53    
   \              0x48 0x45    
   \              0x44 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+ZIPSETUP=1,%d.%d.%...">`:
   \   00000000   0x41 0x54          DC8 "AT+ZIPSETUP=1,%d.%d.%d.%d,%d\015\012"
   \              0x2B 0x5A    
   \              0x49 0x50    
   \              0x53 0x45    
   \              0x54 0x55    
   \              0x50 0x3D    
   \              0x31 0x2C    
   \              0x25 0x64    
   \              0x2E 0x25    
   \              0x64 0x2E    
   \              0x25 0x64    
   \              0x2E 0x25    
   \              0x64 0x2C    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "+ZIPSETUP:CONNECTED">`:
   \   00000000   0x2B 0x5A          DC8 "+ZIPSETUP:CONNECTED"
   \              0x49 0x50    
   \              0x53 0x45    
   \              0x54 0x55    
   \              0x50 0x3A    
   \              0x43 0x4F    
   \              0x4E 0x4E    
   \              0x45 0x43    
   \              0x54 0x45    
   \              0x44 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+ZIPSTATUS=1\\r\\n">`:
   \   00000000   0x41 0x54          DC8 "AT+ZIPSTATUS=1\015\012"
   \              0x2B 0x5A    
   \              0x49 0x50    
   \              0x53 0x54    
   \              0x41 0x54    
   \              0x55 0x53    
   \              0x3D 0x31    
   \              0x0D 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "+ZIPSTATUS:ESTABLISHED">`:
   \   00000000   0x2B 0x5A          DC8 "+ZIPSTATUS:ESTABLISHED"
   \              0x49 0x50    
   \              0x53 0x54    
   \              0x41 0x54    
   \              0x55 0x53    
   \              0x3A 0x45    
   \              0x53 0x54    
   \              0x41 0x42    
   \              0x4C 0x49    
   \              0x53 0x48    
   \              0x45 0x44    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+ZIPCLOSE=1\\r\\n">`:
   \   00000000   0x41 0x54          DC8 "AT+ZIPCLOSE=1\015\012"
   \              0x2B 0x5A    
   \              0x49 0x50    
   \              0x43 0x4C    
   \              0x4F 0x53    
   \              0x45 0x3D    
   \              0x31 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "+ZIPCLOSE:OK">`:
   \   00000000   0x2B 0x5A          DC8 "+ZIPCLOSE:OK"
   \              0x49 0x50    
   \              0x43 0x4C    
   \              0x4F 0x53    
   \              0x45 0x3A    
   \              0x4F 0x4B    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+ZIPSEND=1,%d\\r\\n">`:
   \   00000000   0x41 0x54          DC8 "AT+ZIPSEND=1,%d\015\012"
   \              0x2B 0x5A    
   \              0x49 0x50    
   \              0x53 0x45    
   \              0x4E 0x44    
   \              0x3D 0x31    
   \              0x2C 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "+ZIPSEND:OK">`:
   \   00000000   0x2B 0x5A          DC8 "+ZIPSEND:OK"
   \              0x49 0x50    
   \              0x53 0x45    
   \              0x4E 0x44    
   \              0x3A 0x4F    
   \              0x4B 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Recv Msg:%s\\n">`:
   \   00000000   0x52 0x65          DC8 "Recv Msg:%s\012"
   \              0x63 0x76    
   \              0x20 0x4D    
   \              0x73 0x67    
   \              0x3A 0x25    
   \              0x73 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    285          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   SQC_ME3000_Close
        24   -> LPLD_UART_PutCharArr
        24   -> delay
        24   -> sprintf
        24   -> strlen
        24   -> strstr
      80   SQC_ME3000_Connect
        80   -> LPLD_UART_PutCharArr
        80   -> delay
        80   -> sprintf
        80   -> strlen
        80   -> strstr
      24   SQC_ME3000_Creg
        24   -> LPLD_UART_PutCharArr
        24   -> delay
        24   -> sprintf
        24   -> strlen
        24   -> strstr
      24   SQC_ME3000_Disconnect
        24   -> LPLD_UART_PutCharArr
        24   -> delay
        24   -> sprintf
        24   -> strlen
        24   -> strstr
       0   SQC_ME3000_GetPib
       8   SQC_ME3000_Init
         8   -> LPLD_GPIO_Output_b
         8   -> SQC_ME3000_Creg
         8   -> delay
         8   -> printf
         8   -> strstr
      24   SQC_ME3000_Open
        24   -> LPLD_UART_PutCharArr
        24   -> delay
        24   -> sprintf
        24   -> strlen
        24   -> strstr
      24   SQC_ME3000_Pppstat
        24   -> LPLD_UART_PutCharArr
        24   -> delay
        24   -> sprintf
        24   -> strlen
        24   -> strstr
      24   SQC_ME3000_Recive
        24   -> atoi
        24   -> malloc
        24   -> printf
        24   -> strncpy
      32   SQC_ME3000_Send
        32   -> LPLD_UART_PutChar
        32   -> LPLD_UART_PutCharArr
        32   -> delay
        32   -> sprintf
        32   -> strlen
        32   -> strstr
      24   SQC_ME3000_Tcpstat
        24   -> LPLD_UART_PutCharArr
        24   -> delay
        24   -> sprintf
        24   -> strlen
        24   -> strstr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "+CFUN: 1">
      16  ?<Constant "+CPIN: READY">
      12  ?<Constant "+CREG: 0, 1">
      16  ?<Constant "+ZIPCLOSE:OK">
      12  ?<Constant "+ZIPSEND:OK">
      20  ?<Constant "+ZIPSETUP:CONNECTED">
      24  ?<Constant "+ZIPSTATUS:ESTABLISHED">
      24  ?<Constant "+ZPPPCLOSE:DISCONNECTED">
      16  ?<Constant "+ZPPPCLOSE:OK">
      20  ?<Constant "+ZPPPOPEN:CONNECTED">
      24  ?<Constant "+ZPPPOPEN:ESTABLISHED">
      24  ?<Constant "+ZPPPSTATUS:ESTABLISHED">
      12  ?<Constant "AT+CREG?\r\n">
      16  ?<Constant "AT+ZIPCLOSE=1\r\n">
      20  ?<Constant "AT+ZIPSEND=1,%d\r\n">
      32  ?<Constant "AT+ZIPSETUP=1,%d.%d.%...">
      20  ?<Constant "AT+ZIPSTATUS=1\r\n">
      16  ?<Constant "AT+ZPPPCLOSE\r\n">
      16  ?<Constant "AT+ZPPPOPEN\r\n">
      16  ?<Constant "AT+ZPPPSTATUS\r\n">
      16  ?<Constant "Recv Msg:%s\n">
      28  ?<Constant "Start device,waiting...\n">
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_10
       4  ??DataTable10_11
       4  ??DataTable10_12
       4  ??DataTable10_13
       4  ??DataTable10_14
       4  ??DataTable10_15
       4  ??DataTable10_16
       4  ??DataTable10_17
       4  ??DataTable10_18
       4  ??DataTable10_19
       4  ??DataTable10_2
       4  ??DataTable10_20
       4  ??DataTable10_21
       4  ??DataTable10_22
       4  ??DataTable10_23
       4  ??DataTable10_24
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable10_9
      84  SQC_ME3000_Close
      98  SQC_ME3000_Connect
     106  SQC_ME3000_Creg
      72  SQC_ME3000_Disconnect
       6  SQC_ME3000_GetPib
     252  SQC_ME3000_Init
      94  SQC_ME3000_Open
      72  SQC_ME3000_Pppstat
     202  SQC_ME3000_Recive
     126  SQC_ME3000_Send
      72  SQC_ME3000_Tcpstat
    1072  gprs_pib

 
 1 072 bytes in section .bss
   412 bytes in section .rodata
 1 284 bytes in section .text
 
 1 284 bytes of CODE  memory
   412 bytes of CONST memory
 1 072 bytes of DATA  memory

Errors: none
Warnings: 39
